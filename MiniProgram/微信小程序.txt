AppID(小程序ID)	wx7aa04809c83ac8cb

AppSecret(小程序密钥)   ab68d8703dd926b4e96aea73fd0d2ada

【小程序通用网络请求】

// util.js (参看API->网络->发起请求->wx.request)

// app.js  globalData:{domain: 'http://inishop.com/', //正式使用是https}

const wxRequest = (url, params, successCallback, errorCallback, completeCallback) => {
  wx.request({
    url: getApp().globalData.domain + 'index.php/api/' + url,
    data: params || {},
    header: { 'content-type': 'application/json' },
    method: 'POST',
    success: function (res) {
      if(res.statusCode== 200){
        successCallback(res.data)
      }else{
        errorCallback(res)
      }
    },
    fail: function(res) {
      errorCallback(res)
    },
    complete: function (res) {
      completeCallback(res)
    }
  })
}

//调用示例

Page({

  data: {
    banner: [],
    domain: app.globalData.domain,
  },

  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
    this.loadIndex()
  },

  /**
  * 加载幻灯片
  */
  loadIndex: function () {
      var url = 'Index/index'
      var params = {}
      util.wxRequest(url, params, data => {
        if (data.code == 200) {
          this.setData({ banner: data.banner })
        }
      }, data => { }, data => { })
   
  },

  
})


【基本配置】

// app.json（框架->配置->全局配置）

{
  "pages":[
        "pages/index/index",
        "pages/search/search",
        "pages/category/category",
        "pages/cart/cart",
        "pages/goods/detail/detail",
        "pages/goods/list/list",
        "pages/member/money/money",
        "pages/member/collect/collect",
        "pages/member/aboutus/aboutus",
        "pages/order/list/list",
        "pages/order/submit/submit",
        "pages/order/details/details",
        "pages/order/payment/payment",
        "pages/order/result/result",
        "pages/order/pay/pay",
        "pages/address/list/list",
        "pages/address/add/add",
        "pages/address/edit/edit",
        "pages/member/index/index"
   ],
  "window": {
    "backgroundTextStyle": "light", //下拉 loading 的样式，仅支持 dark / light
    "navigationBarBackgroundColor": "#0FBB70", //导航栏背景颜色
    "navigationBarTitleText": "微信小程序商城", //导航栏标题文字内容
    "navigationBarTextStyle": "white" //导航栏标题颜色
  },
  "tabBar": {
    "selectedColor": "#3cc51f", //tab 上的文字选中时的颜色
    "list": [
      {
        "pagePath": "pages/index/index", //页面路径，必须在 pages 中先定义
        "text": "首页",//tab 上按钮文字
        "iconPath": "images/icon_home.png",//图片路径，icon 大小限制为40kb，建议尺寸为 81px * 81px
        "selectedIconPath": "images/icon_home_selected.png" //选中时的图片路径
      },
      {
        "pagePath": "pages/category/category",
        "text": "分类",
        "iconPath": "images/icon_cate.png",
        "selectedIconPath": "images/icon_cate_selected.png"
      },
      {
        "pagePath": "pages/cart/cart",
        "text": "购物车",
        "iconPath": "images/icon_cart.png",
        "selectedIconPath": "images/icon_cart_selected.png"
      },
      {
        "pagePath": "pages/member/index/index",
        "text": "我",
        "iconPath": "images/icon_member.png",
        "selectedIconPath": "images/icon_member_selected.png"
      }
    ]
  }
}

【小程序图片缓存更新问题】

Page({

data: {
    random: '',
  },

  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
    this.createNonceStr()
  },
 /**
   * 生成一个随机数
   */
  createNonceStr: function () {
    var random = Math.random().toString().substr(2, 15)
    this.setData({ random: random })
  },

})

页面图片地址：src="{{domain}}uploads/{{item.img}}?{{random}}"


【搜索框】

<!-- 搜索框 -->
<view class='view_search'>
  <view class='view_searchbg'>
    <input placeholder-style='#999' bindinput='inputing' bindconfirm='searchGoods' class='input_search' placeholder='请输入您所搜索的商品'>请输入您所搜索的商品</input>
  </view>
</view>

bindinput:键盘输入时触发，event.detail = {value, cursor, keyCode}，

bindconfirm:点击完成按钮时触发，event.detail = {value: value}

Page({

data: {
    keywords: '',
  },

 /**
   * 获取搜索框的值
   */
  inputing: function(e){
    this.setData({ keywords: e.detail.value })
  },

  /**
   * 搜索功能
   */
  searchGoods: function(){
    var keywords = this.data.keywords
    if (keywords != ''){
      wx.navigateTo({
        url: '../search/search?keywords=' + keywords
      })
    }
  },

})

【快捷图标】

  <view bindtap='showCategory'>
    <image src='/images/icon_all.png' mode='aspectFill' class='orange'></image>
    <text>全部分类</text>
  </view>

// bindtap:绑定跳转事件

// mode='aspectFill':保持纵横比缩放图片

【列表渲染】

在组件上使用 wx:for 控制属性绑定一个数组，即可使用数组中各项的数据重复渲染该组件。

默认数组的当前项的下标变量名默认为 index，数组当前项的变量名默认为 item

使用 wx:for-item 可以指定数组当前元素的变量名，

使用 wx:for-index 可以指定数组当前下标的变量名：

示例：
<view class='container-class' wx:for="{{goods}}" wx:for-item="items" wx:key="key">
<view class='single-goods' wx:for="{{items.list}}" wx:key="{{item.id}}" bindtap='showDetail' data-goods-id="{{item.id}}">
</view>
</view>

【传值】
<text wx:for="{{categoryList}}" wx:key="{{item.id}}" data-index='{{index}}' class='{{highlight[index]}}' bindtap='getSubCategory' data-id='{{item.id}}'>{{item.name}}</text>

  /**
   * 点击一级分类获取子分类
   */
  getSubCategory: function(e) {
    var pid = e.currentTarget.dataset.id //获取data-id的值
    var index = e.currentTarget.dataset.index //获取data-index的值
    this.setHighlight(index)
    var url = 'Category/getCategory'
    var params = { pid:pid}
    util.wxRequest(url, params, data => {
      if (data.code == 200) {
        this.setData({
          subCategoryList: data.sublist
        })
      }
    }, data => { }, data => { })
  },

【上拉加载下拉刷新】

配置：search.json {"enablePullDownRefresh": true}

 /**
   * 页面相关事件处理函数--监听用户下拉动作（下拉刷新）
   */
  onPullDownRefresh: function () {
    wx.showToast({
      title: '刷新中',
      icon: 'loading'
    })
    this.setData({ goods:[], page:1})
    this.getGoods(this.data.keywords, 1)
  },

  /**
   * 页面上拉触底事件的处理函数(上拉加载)
   */
  onReachBottom: function () {
    wx.showToast({
      title: '加载中',
      icon: 'loading'
    })
    this.getGoods(this.data.keywords, ++this.data.page)
  },

【页面跳转】

.wxml文件中利用bindtap绑定跳转事件

 <image src='{{domain}}uploads/{{item.img}}' mode='aspectFill' bindtap='showList' data-cid="{{item.id}}"></image>

.js文件中定义跳转事件

  /**
   * 显示分类列表
   */
  showList: function(e) {
    var cid = e.currentTarget.dataset.cid
    wx.navigateTo({
      url: '../goods/list/list?cid=' + cid
    })
  }

【富文本解析】

小程序中无法直接解析编辑器存入数据库的数据，需要通过WxParse来解析

引入js：var WxParse = require('../../../wxParse/wxParse.js');

引用css: @import "/wxParse/wxParse.wxss";

引用wxml：<import src="/wxParse/wxParse.wxml"/>

数据绑定： WxParse.wxParse('article', 'html', data.info.content, this, 5)

wxml中调用：<template is="wxParse" data="{{wxParseData:article.nodes}}"/>


【变更购买数量】


Page({

  data: {
    goodsNum: 1, //商品数量
  },


bindMinus:function(e){
  var num=this.data.goodsNum
  if(num > 1){
  num--
  }
  this.setData({{goodsNum:num}}) 
}
 

bindPlus:function(e){
  var num=this.data.goodsNum
  num++
  this.setData({{goodsNum:num}}) 
}
 
inputing:function(e){
  var num=e.detail.value
  if(num<1){
    num=1  
  }
  this.setData({{goodsNum:num}})
}

})

// bindtap='bindMinus'

// bindtap='bindPlus'

// bindinput='inputing'


【获取openid】

通过wx.login获取code

通过传递appid secret grant_type js_code调用接口
https://api.weixin.qq.com/sns/jscode2session
获取openid