【数据库设计规范】


// 数据库命名规范  //

所有数据库对象名称必须使用小写字母并用下划线分割

所有数据库对象名称禁止使用MYSQL保留关键字

数据库对象的命名做到见名识意，并且最好不要超过32个字符

临时表必须以tmp为前缀并以日期为后缀

备份表必须以bak为前缀并以日期为后缀

所有存储相同数据的列名和列类型必须一致


// 基本设计规范 //

统一使用innodb表引擎

数据库和表的字符集统一使用utf8

所有表和字段都需要添加注释 （使用comment从句）

尽量控制表数据大小，建议500万以内

尽量做到冷热数据分离，减小表的宽度

禁止在表中建立预留字段

禁止在数据库中存储图片，文件等二进制数据

禁止在线上做数据压力测试

禁止从开发环境，测试环境直接连生产环境数据库


// 索引设计规范 //

限制每张表的索引数量，建议单张表索引不超过5个

innodb表必须有一个主键，不适用更新频繁的列作为主键

注意合理选择复合索引键值得顺序


// 常见索引列建议 //

select update delete语句的where从句中的列，

包含在order by group by distinct中的字段

多表join的关联列

避免建立冗余索引和重复索引

对于频繁的查询优先考虑适用覆盖索引


// 如何选择索引列的顺序 //

区分度高的列放在联合索引最左侧

字段长度小的列放在联合索引最左侧

使用频繁的列放到联合索引左侧



//  数据库字段设计 //

选择符合存储要求的最小的数据类型

避免使用Blob或者Text类型以及ENUM类型

每个字段尽量具有not null属性

使用datetime或者timestamp类型存储时间



【数据库SQL开发规范】

建议使用预编译语句进行数据库操作

避免数据类型的隐式转换

充分利用表上已经存在的索引

禁止select * 必须使用 select 字段

用join代替子查询

避免使用join关联太多的表，建议不超过5个

禁止使用order by rand()进行随机排序

where从句中禁止使用函数转换和计算

使用union all代替 union

拆分复杂的大sql为多个小sql


【数据库操作行为规范】

超过100万行的批量写操作，要分批多次进行操作

对于大表使用pt-online-schema-change修改表结构

禁止为程序使用的账号赋予super权限
