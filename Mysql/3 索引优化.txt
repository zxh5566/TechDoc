【聚簇索引和非聚簇索引】

 >> innodb主索引文件上 直接存放该行数据,称为聚簇索引,次索引指向对主键的引用

 >> myisam是非聚簇索引，主索引和次索引,都指向物理行(磁盘位置)



【索引覆盖】

 >> 如果查询的列恰好是索引的一部分,那么查询只需要在索引文件上进行,不需要回行到磁盘再找数据.
    这种查询速度非常快,称为”索引覆盖




【order by使用索引】

 >> 当order by 中的字段出现在where条件中时，才会利用索引而不排序

 >> where语句与order by语句使用相同的索引，并遵循最左前缀原则而且where语句不能使用条件查询


【索引失效的情况】

 >> 如果条件中有or，即使其中有条件带索引也不会使用(这也是为什么尽量少用or的原因)
    要想使用or，又想让索引生效，只能将or条件中的每个列都加上索引

 >> 对于多列复合索引，遵循左前缀原则

 >> like查询以%开头

 >> 如果列类型是字符串，那一定要在条件中将数据使用引号引用起来,否则不使用索引

 >> 如果mysql估计使用全表扫描要比使用索引快,则不使用索引





【索引优化策略】 

 >> 索引不存储null值,更准确的说，单列索引不存储null值，复合索引不存储全为null的值。

 >> 索引列上不能使用表达式或者函数

 >> 联合索引顺序：经常会被用到的列优先